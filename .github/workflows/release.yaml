name: release
on:
  pull_request:
    branches:
      - master
    types:
      - closed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Extract release tag
        run: |
          tag=$(echo ${{ github.event.pull_request.head.ref }} | sed 's/release\///')
          echo "TAG=$tag" >> $GITHUB_ENV

      - name: Download kustomize
        run: make kustomize

      - name: Generate manifests
        run: IMG=${{ env.IMAGE_NAME }}:${{ env.Tag }} make generate-manifests

      - name: Manifests commit
        run: |
          if (git diff --shortstat | grep '[0-9]'); then \
            set -x
            git config --global user.name "[bot] Github Actions"
            git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git add install/install.yaml
            git commit --author=. -m 'generated manifests'
            git push
          fi
          
      - name: Push Tag
        run: |
          git tag ${{ env.TAG }}
          git push origin `echo '${{ github.event.pull_request.head.ref }}' | sed 's/release\///'`
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      

      - name: Slack Notification on Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_ICON: https://avatars0.githubusercontent.com/u/44036562?s=100&v=4
          SLACK_USERNAME: GitHubActions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_ICON: https://avatars0.githubusercontent.com/u/44036562?s=100&v=4
          SLACK_USERNAME: GitHubActions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
